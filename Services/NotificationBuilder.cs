using System;
using DynaNoty;
using DynaNoty.Interfaces;
using DynaNoty.Models;
using DynaNoty.Configuration;
using Microsoft.Extensions.Logging;

namespace DynaNoty.Services
{
    /// <summary>
    /// Builder –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —É–¥–æ–±–Ω—ã–º API
    /// </summary>
    public class NotificationBuilder
    {
        private string _title = string.Empty;
        private string _subtitle = string.Empty;
        private string _icon = "üîî";
        private NotificationType _type = NotificationType.Standard;

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä NotificationBuilder
        /// </summary>
        public static NotificationBuilder Create()
        {
            return new NotificationBuilder();
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        public static NotificationBuilder CreateStandard()
        {
            return new NotificationBuilder()
                .WithType(NotificationType.Standard);
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        public static NotificationBuilder CreateMusic()
        {
            return new NotificationBuilder()
                .WithType(NotificationType.Music)
                .WithIcon("üéµ");
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–≤–æ–Ω–∫–µ
        /// </summary>
        public static NotificationBuilder CreateCall()
        {
            return new NotificationBuilder()
                .WithType(NotificationType.Call)
                .WithIcon("üìû");
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        public static NotificationBuilder CreateCompact()
        {
            return new NotificationBuilder()
                .WithType(NotificationType.Compact)
                .WithTitle(string.Empty)
                .WithSubtitle(string.Empty);
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫
        /// </summary>
        public NotificationBuilder WithTitle(string title)
        {
            _title = title ?? string.Empty;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        /// </summary>
        public NotificationBuilder WithSubtitle(string subtitle)
        {
            _subtitle = subtitle ?? string.Empty;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–∫–æ–Ω–∫—É
        /// </summary>
        public NotificationBuilder WithIcon(string icon)
        {
            _icon = icon ?? "üîî";
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        /// </summary>
        public NotificationBuilder WithType(NotificationType type)
        {
            _type = type;
            return this;
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç NotificationData
        /// </summary>
        public NotificationData Build()
        {
            return new NotificationData(_title, _subtitle, _icon, _type);
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        /// </summary>
        public NotificationData BuildMusic(string song, string artist)
        {
            return NotificationData.CreateMusicNotification(_title, song, artist);
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–≤–æ–Ω–∫–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        /// </summary>
        public NotificationData BuildCall(string caller)
        {
            return NotificationData.CreateCallNotification(_title, caller, _icon);
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        public NotificationData BuildCompact()
        {
            return NotificationData.CreateCompactNotification(_icon);
        }
    }

    /// <summary>
    /// Builder –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    /// </summary>
    public class NotificationConfigurationBuilder
    {
        private readonly NotificationConfiguration _config;

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä NotificationConfigurationBuilder
        /// </summary>
        public NotificationConfigurationBuilder()
        {
            _config = new NotificationConfiguration();
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        /// </summary>
        public static NotificationConfigurationBuilder Create()
        {
            return new NotificationConfigurationBuilder();
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        /// </summary>
        public static NotificationConfigurationBuilder CreateFast()
        {
            return new NotificationConfigurationBuilder()
                .WithAutoHideTimeout(2)
                .WithExpandDelay(200)
                .WithAnimations(false);
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        /// </summary>
        public static NotificationConfigurationBuilder CreateAnimated()
        {
            return new NotificationConfigurationBuilder()
                .WithAutoHideTimeout(5)
                .WithExpandDelay(500)
                .WithAnimations(true)
                .WithAppearDuration(400)
                .WithExpandDuration(600);
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –∞–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏—è
        /// </summary>
        public NotificationConfigurationBuilder WithAutoHideTimeout(int seconds)
        {
            _config.AutoHideTimeoutSeconds = seconds;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
        /// </summary>
        public NotificationConfigurationBuilder WithExpandDelay(int milliseconds)
        {
            _config.ExpandDelay = milliseconds;
            return this;
        }

        /// <summary>
        /// –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏
        /// </summary>
        public NotificationConfigurationBuilder WithAnimations(bool enabled)
        {
            _config.EnableAnimations = enabled;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
        /// </summary>
        public NotificationConfigurationBuilder WithAppearDuration(int milliseconds)
        {
            _config.AppearAnimationDuration = milliseconds;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        /// </summary>
        public NotificationConfigurationBuilder WithExpandDuration(int milliseconds)
        {
            _config.ExpandAnimationDuration = milliseconds;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        /// </summary>
        public NotificationConfigurationBuilder WithMaxNotifications(int count)
        {
            _config.MaxNotifications = count;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        /// </summary>
        public NotificationConfigurationBuilder WithSizes(double minWidth, double maxWidth, double height)
        {
            _config.MinNotificationWidth = minWidth;
            _config.MaxNotificationWidth = maxWidth;
            _config.NotificationHeight = height;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–∞
        /// </summary>
        public NotificationConfigurationBuilder WithColors(
            System.Windows.Media.Color backgroundColor,
            System.Windows.Media.Color textColor,
            System.Windows.Media.Color iconColor)
        {
            _config.BackgroundColor = backgroundColor;
            _config.TextColor = textColor;
            _config.IconColor = iconColor;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É
        /// </summary>
        public NotificationConfigurationBuilder WithSystemTheme(bool autoAdapt = true, bool useAccentColor = true)
        {
            _config.AutoAdaptToSystemTheme = autoAdapt;
            _config.UseSystemAccentColor = useAccentColor;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        /// </summary>
        public NotificationConfigurationBuilder WithPerformance(int maxPoolSize = 10, int preWarmCount = 3)
        {
            _config.MaxPoolSize = maxPoolSize;
            _config.PreWarmCount = preWarmCount;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤
        /// </summary>
        public NotificationConfigurationBuilder WithFontSizes(double titleSize = 16, double subtitleSize = 14, double iconSize = 20)
        {
            _config.TitleFontSize = titleSize;
            _config.SubtitleFontSize = subtitleSize;
            _config.IconFontSize = iconSize;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI
        /// </summary>
        public NotificationConfigurationBuilder WithElementSizes(double iconSize = 24, double buttonSize = 24)
        {
            _config.IconSize = iconSize;
            _config.ActionButtonSize = buttonSize;
            return this;
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç NotificationConfiguration
        /// </summary>
        public NotificationConfiguration Build()
        {
            return _config;
        }
    }

    /// <summary>
    /// Builder –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è NotificationManager
    /// </summary>
    public class NotificationManagerBuilder
    {
        private NotificationConfiguration _config;
        private ILoggerFactory _loggerFactory;
        private INotificationWindow _window;
        private bool _useDefaultServices = true;

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä NotificationManagerBuilder
        /// </summary>
        public static NotificationManagerBuilder Create()
        {
            return new NotificationManagerBuilder();
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç builder —Å –±—ã—Å—Ç—Ä–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        /// </summary>
        public static NotificationManagerBuilder CreateFast()
        {
            return new NotificationManagerBuilder()
                .WithConfiguration(NotificationConfigurationBuilder.CreateFast().Build());
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç builder —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        /// </summary>
        public static NotificationManagerBuilder CreateAnimated()
        {
            return new NotificationManagerBuilder()
                .WithConfiguration(NotificationConfigurationBuilder.CreateAnimated().Build());
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        /// </summary>
        public NotificationManagerBuilder WithConfiguration(NotificationConfiguration config)
        {
            _config = config;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª–æ–≥–≥–µ—Ä
        /// </summary>
        public NotificationManagerBuilder WithLogger(ILoggerFactory loggerFactory)
        {
            _loggerFactory = loggerFactory;
            return this;
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∫–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        /// </summary>
        public NotificationManagerBuilder WithWindow(INotificationWindow window)
        {
            _window = window;
            return this;
        }

        /// <summary>
        /// –û—Ç–∫–ª—é—á–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        /// </summary>
        public NotificationManagerBuilder WithoutDefaultServices()
        {
            _useDefaultServices = false;
            return this;
        }

        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç NotificationManager
        /// </summary>
        public NotificationManager Build()
        {
            if (_useDefaultServices)
            {
                return NotificationManagerFactory.CreateWithConfig(_config ?? new NotificationConfiguration(), _loggerFactory);
            }

            var dependencies = new NotificationManagerDependencies
            {
                NotificationWindow = _window,
                Config = _config ?? new NotificationConfiguration(),
                LoggerFactory = _loggerFactory
            };

            return new NotificationManager(dependencies);
        }
    }
}
