using System;
using System.Collections.Generic;
using DynaNoty.Events;
using DynaNoty.Models;

namespace DynaNoty.Interfaces
{
    /// <summary>
    /// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ Dynamic Island
    /// </summary>
    public interface INotificationService : IDisposable
    {
        /// <summary>
        /// –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ã—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        void ShowNotification(string title, string subtitle, string icon = "üîî", List<NotificationAction> actions = null);

        /// <summary>
        /// –ü–æ–∫–∞–∑–∞—Ç—å –º—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        void ShowMusicNotification(string title, string subtitle, string artist);

        /// <summary>
        /// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–≤–æ–Ω–∫–µ
        /// </summary>
        void ShowCallNotification(string title, string caller, string icon = "üìû");

        /// <summary>
        /// –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–∞–∫—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        /// </summary>
        void ShowCompactNotification(string icon = "üîî");

        /// <summary>
        /// –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        /// </summary>
        void ClearAllNotifications();

        /// <summary>
        /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        /// </summary>
        int ActiveNotificationCount { get; }

        /// <summary>
        /// –°–æ–±—ã—Ç–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        /// </summary>
        event EventHandler<NotificationDismissedEventArgs> NotificationDismissed;

        /// <summary>
        /// –°–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        /// </summary>
        event EventHandler<NotificationActionEventArgs> NotificationActionClicked;
    }
}
